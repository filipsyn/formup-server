// <auto-generated />
using System;
using FormUp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormUp.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240102201859_AddNameAndDescriptionToWorkout")]
    partial class AddNameAndDescriptionToWorkout
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FormUp.Api.Common.Persistence.GeolocationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Geolocations");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Exercises.ExerciseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fdb77d6a-1449-44cd-a097-1ed4a58d637d"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7040),
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7080),
                            Name = "exercises.pull-ups"
                        },
                        new
                        {
                            Id = new Guid("38bc29ef-4e79-45db-97d9-4981b019bc41"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7090),
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7090),
                            Name = "exercises.push-ups"
                        },
                        new
                        {
                            Id = new Guid("a694c919-416e-4cc7-b3b3-2240131a29c9"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7090),
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7090),
                            Name = "exercises.bw-squats"
                        },
                        new
                        {
                            Id = new Guid("53890bde-7ab2-4689-a696-494a1ce7a361"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7100),
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7100),
                            Name = "exercises.dips"
                        });
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Gyms.GymEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Translations.TranslationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Locale", "Key");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70b1bd1f-7c8a-450c-b975-a34a0d492178"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7200),
                            Key = "exercises.pull-ups",
                            Locale = "cs",
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7200),
                            Value = "Shyby"
                        },
                        new
                        {
                            Id = new Guid("7cea4c28-7042-4976-956d-0616b66cb24e"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7210),
                            Key = "exercises.pull-ups",
                            Locale = "en",
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7210),
                            Value = "Pull ups"
                        },
                        new
                        {
                            Id = new Guid("fc1ec5f7-3774-41f8-9298-d3c34f79a24d"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7210),
                            Key = "exercises.dips",
                            Locale = "cs",
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7210),
                            Value = "Dipy"
                        },
                        new
                        {
                            Id = new Guid("881fcd5e-eda7-4bcd-9045-65f47abd563e"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7220),
                            Key = "exercises.dips",
                            Locale = "en",
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7220),
                            Value = "Dips"
                        },
                        new
                        {
                            Id = new Guid("ebd01e46-86a8-4900-bd1f-449dbea44a16"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7220),
                            Key = "exercises.bw-squats",
                            Locale = "cs",
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7220),
                            Value = "Dřepy s vlastní vahou"
                        },
                        new
                        {
                            Id = new Guid("e2443501-1b58-4cb3-99d2-c915347fbf56"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7230),
                            Key = "exercises.bw-squats",
                            Locale = "en",
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7230),
                            Value = "Body-weight squats"
                        },
                        new
                        {
                            Id = new Guid("24d3cdfd-d0e3-4228-9c6b-b49f3414b24f"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7230),
                            Key = "exercises.push-ups",
                            Locale = "cs",
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7230),
                            Value = "Kliky"
                        },
                        new
                        {
                            Id = new Guid("7bc2f37a-913d-45da-9d07-f82d2dcca015"),
                            CreatedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7240),
                            Key = "exercises.push-ups",
                            Locale = "en",
                            ModifiedAt = new DateTime(2024, 1, 2, 21, 18, 59, 4, DateTimeKind.Local).AddTicks(7240),
                            Value = "Push ups"
                        });
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Users.HeightLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("Heights");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Users.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Users.WeightLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("Weights");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Workouts.ActivityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepetitionsCount")
                        .HasColumnType("int");

                    b.Property<int>("SetsCount")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.Property<Guid?>("WorkoutEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutEntityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Workouts.WorkoutEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Gyms.GymEntity", b =>
                {
                    b.HasOne("FormUp.Api.Common.Persistence.GeolocationEntity", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Workouts.ActivityEntity", b =>
                {
                    b.HasOne("FormUp.Api.Features.v1.Exercises.ExerciseEntity", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormUp.Api.Features.v1.Workouts.WorkoutEntity", null)
                        .WithMany("Activities")
                        .HasForeignKey("WorkoutEntityId");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Workouts.WorkoutEntity", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
