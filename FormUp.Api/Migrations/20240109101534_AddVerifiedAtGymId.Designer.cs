// <auto-generated />
using System;
using FormUp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormUp.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240109101534_AddVerifiedAtGymId")]
    partial class AddVerifiedAtGymId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FormUp.Api.Common.Persistence.GeolocationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Geolocations");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Exercises.ExerciseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e69da65-01fb-4cee-b2b9-b2d2101c19fe"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8320),
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8320),
                            Name = "exercises.pull-ups"
                        },
                        new
                        {
                            Id = new Guid("81b7b597-feaf-458d-b7fc-78cc6020c039"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8330),
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8330),
                            Name = "exercises.push-ups"
                        },
                        new
                        {
                            Id = new Guid("bca2d0d3-4037-4b92-9e04-ec44faaa1b4d"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8330),
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8330),
                            Name = "exercises.bw-squats"
                        },
                        new
                        {
                            Id = new Guid("6d82e9b7-2eef-4ba8-b5a4-eaf63670b35f"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8340),
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8340),
                            Name = "exercises.dips"
                        });
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Gyms.GymEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gyms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afa832b5-93f7-4148-9fbd-4f7f038bdcd2"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8530),
                            Latitude = 49.178859520009325,
                            Longitude = 16.59588166754828,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8530),
                            Name = "Posilovna Velký Průvan"
                        },
                        new
                        {
                            Id = new Guid("3104dfa3-5703-4d2d-89f3-19a1b9590547"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8540),
                            Latitude = 49.179083949535297,
                            Longitude = 16.596503940037902,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8540),
                            Name = "Posilovna Malý Průvan"
                        },
                        new
                        {
                            Id = new Guid("09aa34b1-7147-45f4-9ba9-330f63fadf24"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8540),
                            Latitude = 49.177089060496634,
                            Longitude = 16.606190093594201,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8540),
                            Name = "AZ Fitness"
                        },
                        new
                        {
                            Id = new Guid("370326fc-b38e-4975-a231-ca3e8fc9a123"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8540),
                            Latitude = 49.181262112264804,
                            Longitude = 16.60282245697524,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8540),
                            Name = "NewPark Gym"
                        },
                        new
                        {
                            Id = new Guid("9cffa5fb-8d9e-428c-ba57-a149fe38e5e6"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8550),
                            Latitude = 49.180330210607991,
                            Longitude = 16.606384581697789,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8550),
                            Name = "Energy Fitness Club"
                        },
                        new
                        {
                            Id = new Guid("a5215b48-c7a7-4df6-a40f-9f1b9a0f66ae"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8550),
                            Latitude = 49.215051402565855,
                            Longitude = 16.609402145470618,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8550),
                            Name = "Hulk Gym"
                        },
                        new
                        {
                            Id = new Guid("20debac7-bd8d-413a-b3e6-4f35d846061b"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8550),
                            Latitude = 49.212976899683049,
                            Longitude = 16.609015907373617,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8550),
                            Name = "Fitness Boby"
                        },
                        new
                        {
                            Id = new Guid("c464f94c-f90f-4228-a5e9-0839c1c49d10"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8560),
                            Latitude = 49.218555432690493,
                            Longitude = 16.624250854578833,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8560),
                            Name = "Blackfield Gym"
                        },
                        new
                        {
                            Id = new Guid("720d57fd-03cb-46bf-855d-3b310b4f1a68"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8560),
                            Latitude = 49.190492694739753,
                            Longitude = 16.617386769256324,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8560),
                            Name = "Form Factory Fitness Club Vlněna"
                        },
                        new
                        {
                            Id = new Guid("a9871772-1c83-4399-a798-2c74aa83d231"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8560),
                            Latitude = 49.208489226784764,
                            Longitude = 16.605422062883459,
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8560),
                            Name = "Form Factory Fitness Club Lužánky"
                        });
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Translations.TranslationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Locale", "Key");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e95cf39c-2204-485e-9036-2e1af8cb78a9"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8440),
                            Key = "exercises.pull-ups",
                            Locale = "cs",
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8440),
                            Value = "Shyby"
                        },
                        new
                        {
                            Id = new Guid("bd588163-bd7a-41a0-b777-9fb130f3cb8a"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8450),
                            Key = "exercises.pull-ups",
                            Locale = "en",
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8450),
                            Value = "Pull ups"
                        },
                        new
                        {
                            Id = new Guid("54ab8161-1776-4571-8832-7a93b4069c05"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8450),
                            Key = "exercises.dips",
                            Locale = "cs",
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8450),
                            Value = "Dipy"
                        },
                        new
                        {
                            Id = new Guid("09ae48fa-6e4e-4935-a2af-e66ca7ff561a"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8460),
                            Key = "exercises.dips",
                            Locale = "en",
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8460),
                            Value = "Dips"
                        },
                        new
                        {
                            Id = new Guid("f70f4e8e-7c47-490a-b897-9b30eab17fe5"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8460),
                            Key = "exercises.bw-squats",
                            Locale = "cs",
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8460),
                            Value = "Dřepy s vlastní vahou"
                        },
                        new
                        {
                            Id = new Guid("55a85f1e-fe64-479e-9043-2dce960e0f8e"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8460),
                            Key = "exercises.bw-squats",
                            Locale = "en",
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8460),
                            Value = "Body-weight squats"
                        },
                        new
                        {
                            Id = new Guid("bdd21b3e-0161-47c3-9b04-9c46beef206c"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8470),
                            Key = "exercises.push-ups",
                            Locale = "cs",
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8470),
                            Value = "Kliky"
                        },
                        new
                        {
                            Id = new Guid("3be640c2-45cf-4ac6-a039-219bd3800b82"),
                            CreatedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8470),
                            Key = "exercises.push-ups",
                            Locale = "en",
                            ModifiedAt = new DateTime(2024, 1, 9, 10, 15, 34, 499, DateTimeKind.Utc).AddTicks(8470),
                            Value = "Push ups"
                        });
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Users.HeightLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("Heights");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Users.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Users.WeightLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("Weights");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Workouts.ActivityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepetitionsCount")
                        .HasColumnType("int");

                    b.Property<int>("SetsCount")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.Property<Guid?>("WorkoutEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutEntityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Workouts.WorkoutEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VerifiedAtGymId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Workouts.ActivityEntity", b =>
                {
                    b.HasOne("FormUp.Api.Features.v1.Exercises.ExerciseEntity", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormUp.Api.Features.v1.Workouts.WorkoutEntity", null)
                        .WithMany("Activities")
                        .HasForeignKey("WorkoutEntityId");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("FormUp.Api.Features.v1.Workouts.WorkoutEntity", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
